// Generated by CoffeeScript 1.4.0
(function() {
  var addElementToDiv, changeFont, changeTagName, wrapElement;

  $(document).ready(function() {
    $('body').prepend('\
     <div id="draggableFlash" class="hide alert alert-success" style="\
    z-index: 1000;\
    position: absolute;\
    left: 41%;\
    top: 2%;\
    width: 200px;\
">\
      <a class="close" id= "closeMyFlash" href="#">Ã—</a>\
      <p>Element made draggable!</p>\
    </div>\
    ');
    $('body').append('\
      <!-- Modal -->\
      <div id="fontModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">\
        <div class="modal-header">\
          <h3 id="myModalLabel">Change font</h3>\
        </div>\
        <div class="modal-body">\
          <select name="font-list" id="font-list">\
            <option value="Raleway">Raleway</option>\
            <option value="Gabriela"> Gabriela </option>\
            <option value="Abril+Fatface">Abril Fatface</option>\
            <option value="Gentium+Book+Basic">Gentium Book Basic</option>\
            <option value="Gravitas+One">Gravitas One</option>\
            <option value="Lato">Lato</option>\
            <option value="Merriweather">Merriweather</option>\
            <option value="Old+Standard+TT">Old Standard TT</option>\
            <option value="Open+Sans">Open Sans</option>\
            <option value="Playfair+Display">Playfair Display</option>\
            <option value="PT+Sans">PT Sans</option>\
            <option value="PT+Sans+Narrow">PT Sans Narrow</option>\
            <option value="PT+Serif">PT Serif</option>\
            <option value="Vollkorn">Vollkorn</option>\
          </select>\
        <textarea name="Tony" id="changeFontSize" cols="1" rows="1">Current font size:</textarea>\
        <input id="fontColor" class="color" value="000000" >\
        </div>\
        <div class="modal-footer">\
          <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>\
          <button id="fontChange" class="btn btn-primary" data-dismiss="modal">Save changes</button>\
        </div>\
      </div>  \
    ');
    $('body').append('\
      <!-- Modal -->\
      <div id="helpModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">\
        <div class="modal-header">\
          <h3 id="myModalLabel">Help Menu</h3>\
        </div>\
        <div class="modal-body">\
          <h3>Help menu: Shift + H</h3>\
          <h3>Change font-styles: Shift + F</h3>\
          <h3>Wrap element with class: Shift + W</h3>\
          <h3>Change tagName: Shift + T</h3>\
          <h3>Make element draggable: Shift + D</h3>\
          <h3>Add element to existing div: Shift + A</h3>\
        </div>\
        <div class="modal-footer">\
          <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>\
        </div>\
      </div>  \
    ');
    $('body').append('\
      <!-- Modal -->\
      <div id="wrapElementModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">\
        <div class="modal-header">\
          <h3 id="myModalLabel">Wrap Element Menu</h3>\
        </div>\
        <div class="modal-body">\
          <b style="font-size: 50px">.</b><textarea name="Tony" id="wrapElememtArea" cols="1" rows="1">Wrap element class:</textarea>\
        </div>\
        <div class="modal-footer">\
          <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>\
          <button id="wrapElement" class="btn btn-primary" data-dismiss="modal" >Save changes</button>\
        </div>\
      </div>  \
    ');
    $('body').append('\
      <!-- Modal -->\
      <div id="changeTagNameModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">\
        <div class="modal-header">\
          <h3 id="myModalLabel">Change tagName</h3>\
        </div>\
        <div class="modal-body">\
          <textarea name="Tony" id="changeTagNameArea" cols="1" rows="1">change tagName to:</textarea>\
        </div>\
        <div class="modal-footer">\
          <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>\
          <button id="changeTagName" class="btn btn-primary" data-dismiss="modal" >Save changes</button>\
        </div>\
      </div>  \
    ');
    $('body').append('\
      <!-- Modal -->\
      <div id="addElementToDivModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">\
        <div class="modal-header">\
          <h3 id="myModalLabel">Add Element to Existing Class</h3>\
        </div>\
        <div class="modal-body">\
          <b style="font-size: 50px">.</b><textarea name="Tony" id="addElementToDivArea" cols="1" rows="1">Choose div to add element to:</textarea>\
        </div>\
        <div class="modal-footer">\
          <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>\
          <button id="addElementToDiv" class="btn btn-primary" data-dismiss="modal" >Save changes</button>\
        </div>\
      </div>  \
    ');
    $('body').append('\
      <!-- Modal -->\
      <div id="resizableModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">\
        <div class="modal-header">\
          <h3 id="myModalLabel">Make Class resizable</h3>\
        </div>\
        <div class="modal-body">\
          <b style="font-size: 50px">.</b><textarea name="Tony" id="resizableClassArea" cols="1" rows="1">Choose class to make resizable:</textarea>\
        </div>\
        <div class="modal-footer">\
          <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>\
          <button id="makeResizable" class="btn btn-primary" data-dismiss="modal" >Save changes</button>\
        </div>\
      </div>  \
    ');
    $(document).bind('keypress', function(e) {
      var currFontSize, currTagName;
      if (event.shiftKey && event.which === 72) {
        $("#helpModal").modal();
      }
      if (event.shiftKey && event.which === 70) {
        currFontSize = $('.clicked').css('font-size');
        $("#changeFontSize").val(currFontSize);
        $("#fontModal").modal();
      }
      if (event.shiftKey && event.which === 87) {
        $('#wrapElementModal').modal();
      }
      if (event.shiftKey && event.which === 84) {
        currTagName = $('.clicked').prop('tagName').toLowerCase();
        $('#changeTagNameArea').val(currTagName);
        $("#changeTagNameModal").modal();
      }
      if (event.shiftKey && event.which === 68) {
        $('#draggableFlash').fadeIn(1500, function() {
          return $('#draggableFlash').fadeOut();
        });
        $('.clicked').draggable({
          grid: [50, 50],
          disabled: false,
          stop: function() {
            return $(this).draggable('disable');
          },
          opacity: 1
        });
      }
      if (event.shiftKey && event.which === 65) {
        $('#addElementToDivModal').modal();
      }
      if (event.shiftKey && event.which === 82) {
        return $('#resizableModal').modal();
      }
    });
    chrome.extension.onMessage.addListener(function(request, sender, sendResponse) {
      var changeClass, changeTag, element, text;
      if (request.action === "loadBootstrap") {
        $("head").append("          <link href='//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.1/css/bootstrap-combined.min.css' rel='stylesheet'>        ");
        $('body').wrap('<div class="container" />');
      }
      if (request.action === "changeElement") {
        element = $('.clicked');
        changeClass = request.changeClass;
        if (changeClass === "navbar") {
          element.wrap('<div class="navbar" />');
          element.addClass('brand');
          element.wrap('<div class="navbar-inner" />');
          $(".navbar-inner").append('<ul class="nav pull-right sortable"></ul>');
        } else if (changeClass === "nav") {
          text = element.text();
          element.remove();
          $('ul.nav').append("<li><a href='#'>" + text + "</a></li>");
        } else if (changeClass === "addToHero") {
          $(".hero-unit").append(element);
        } else {
          element.wrap('<div class=' + '"' + changeClass + '"' + ' />');
        }
      }
      if (request.action === "changeTagName") {
        changeTag = request.changeTag;
        element = $('.clicked');
        element.replaceWith(function() {
          return $("<h2 />").append(element.contents());
        });
      }
      if (request.action === "changeFont") {
        return changeFont(request.font, request.fontSize, request.color);
      }
    });
    $('body').on('click', "#fontChange", function(e) {
      var color, font, fontSize;
      font = $('#font-list').val();
      fontSize = $("#changeFontSize").val();
      color = $("#fontColor").val();
      return changeFont(font, fontSize, color);
    });
    $('body').on('click', "#wrapElement", function(e) {
      var classToWrap;
      classToWrap = $('#wrapElememtArea').val();
      return wrapElement(classToWrap);
    });
    $('body').on('click', "#changeTagNameModal", function(e) {
      var tagName;
      tagName = $('#changeTagNameArea').val();
      return changeTagName(tagName);
    });
    $('body').on('click', '#closeMyFlash', function(e) {
      return $('#draggableFlash').fadeOut();
    });
    $('body').on('click', '#addElementToDiv', function(e) {
      var classToAdd;
      classToAdd = $('#addElementToDivArea').val();
      return addElementToDiv(classToAdd);
    });
    $('body').on('click', '#makeResizable', function(e) {
      var element;
      element = $('#resizableClassArea').val();
      return $(element).resizable();
    });
    return $('body').on("click", "h1, h2, h3, p, a, li", function(e) {
      var x;
      e.preventDefault();
      x = $(this);
      $('.clicked').css('background', 'none');
      $('.clicked').removeClass('clicked');
      x.addClass('clicked');
      x.css('background', 'rgb(255, 251, 204)');
      return chrome.extension.sendMessage({
        "tagName": x.prop("tagName").toLowerCase(),
        "fontSize": x.css("font-size")
      });
    });
  });

  changeFont = function(font, fontSize, color) {
    var element;
    font = font;
    element = $('.clicked');
    fontSize = fontSize;
    color = "#" + color;
    $("head").append("    <link href='http://fonts.googleapis.com/css?family=" + font + "' rel='stylesheet' type='text/css'>    ");
    font = font.split("+").join(" ");
    element.css('font-family', font);
    element.css('font-size', fontSize);
    return element.css('color', color);
  };

  wrapElement = function(wrapElement) {
    return $('.clicked').wrap('<div class=' + '"' + wrapElement + '"' + ' />');
  };

  changeTagName = function(tagName) {
    if (tagName != null) {
      return $('.clicked').replaceWith(function() {
        return $("<" + tagName + " />").append($('.clicked').contents());
      });
    }
  };

  addElementToDiv = function(classToAdd) {
    var element;
    if (classToAdd != null) {
      classToAdd = "." + classToAdd;
      element = $('.clicked');
      return $(classToAdd).append(element);
    }
  };

}).call(this);
